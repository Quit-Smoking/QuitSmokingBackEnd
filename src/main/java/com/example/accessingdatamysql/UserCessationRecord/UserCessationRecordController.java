package com.example.accessingdatamysql.UserCessationRecord;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.time.LocalDate;

@Controller // This means that this class is a Controller
@RequestMapping(path="/user_cessation_record") // This means URL's start with /demo (after Application path)
public class UserCessationRecordController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private UserCessationRecordRepository userCessationRecordRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addNewUserCessationRecord (@RequestParam Integer user_id, @RequestParam LocalDate start_date, @RequestParam LocalDate end_date) {
        // @ResponseBody means the returned String is the response, not a view name
        // @RequestParam means it is a parameter from the GET or POST request

        UserCessationRecord n = new UserCessationRecord();
        n.setUserId(user_id);
        n.setStartDate(start_date);
        n.setEndDate(end_date);

        userCessationRecordRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<UserCessationRecord> getAllUserCessationRecord() {
        // This returns a JSON or XML with the users
        return userCessationRecordRepository.findAll();
    }
}