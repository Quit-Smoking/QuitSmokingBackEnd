package com.example.accessingdatamysql.MissonRecord;

import com.example.accessingdatamysql.Mission.Mission;
import com.example.accessingdatamysql.Mission.MissionRepository;
import com.example.accessingdatamysql.Mission.MissionRequest;
import com.example.accessingdatamysql.Security.JwtUtil;
import com.example.accessingdatamysql.User.UserRepository;
import net.bytebuddy.asm.Advice;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Service;

import java.time.LocalDate;
import java.util.ArrayList;
import java.util.List;

@Service
public class MissionRecordService {

    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private MissionRecordRepository missionRecordRepository;

    @Autowired
    private MissionRepository missionRepository;

    @Autowired
    private UserRepository userRepository;

    @Autowired
    private JwtUtil jwtUtil;


    public String addMissionRecord(MissionRecordRequest request){
        MissionRecord n = new MissionRecord();

        n.setUserId(request.getUser_id());
        n.setMissionId(request.getMission_id());
        n.setDate(request.getDate());

        missionRecordRepository.save(n);
        return "Saved";
    }

    public void generateMissionRecords(Mission mission){
        String week_data = mission.getWeekData();
        LocalDate start_date = mission.getStartDate();
        Integer user_id = mission.getUserId();

        List<MissionRecord> records = new ArrayList<>();

        // 56일 이후의 데이터까지 일단 저장.
        for(int i = 0; i < 56; i++){
            LocalDate currentDate = start_date.plusDays(i);
            int dayOfWeek = currentDate.getDayOfWeek().getValue();

            if(week_data.charAt(dayOfWeek - 1) == '1'){
                MissionRecord record = new MissionRecord();
                record.setDate(currentDate);
                record.setMissionId(mission.getId());
                record.setUserId(user_id);
                record.setIs_completed(false);
                records.add(record);
            }
        }

        missionRecordRepository.saveAll(records);

    }
}
