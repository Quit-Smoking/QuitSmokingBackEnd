package com.example.accessingdatamysql.MissonRecord;

import com.example.accessingdatamysql.User.User;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.*;

import java.time.LocalDate;

@Controller // This means that this class is a Controller
@RequestMapping(path="/mission_record") // This means URL's start with /demo (after Application path)
public class MissionRecordController {
    @Autowired // This means to get the bean called userRepository
    // Which is auto-generated by Spring, we will use it to handle the data
    private MissionRecordRepository missionRecordRepository;

    @PostMapping(path="/add") // Map ONLY POST Requests
    public @ResponseBody String addMissionRecord (@RequestParam Integer user_id, @RequestParam Integer mission_id, @RequestParam LocalDate date) {
        MissionRecord n = new MissionRecord();
        n.setUserId(user_id);
        n.setMissionId(mission_id);
        n.setDate(date);

        missionRecordRepository.save(n);
        return "Saved";
    }

    @GetMapping(path="/all")
    public @ResponseBody Iterable<MissionRecord> getAllMissionRecords() {
        // This returns a JSON or XML with the users
        return missionRecordRepository.findAll();
    }
}